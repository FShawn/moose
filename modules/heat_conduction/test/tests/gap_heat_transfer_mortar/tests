[Tests]
  design = 'Constraints/index.md'
  issues = '#13080'
  [test]
    type = Exodiff
    input = 'gap_heat_transfer_mortar.i'
    exodiff = 'gap_heat_transfer_mortar_out.e'
    custom_cmp = 'one-variable-temp.cmp'
    partial = True
    map = False
    requirement = 'We shall be able to produce the expected result for a gap conductance test case '
                  'using the mortar method.'
  []
  [modular]
    type = Exodiff
    input = 'modular_gap_heat_transfer_mortar.i'
    exodiff = 'modular_gap_heat_transfer_mortar_out.e'
    custom_cmp = 'one-variable-temp.cmp'
    partial = True
    map = False
    design = 'ModularGapConductanceConstraint.md'
    issues = '#19229'
    requirement = 'We shall be able to produce the expected result for a gap conductance test case '
                  'using the mortar method using the modular gap flux system.'
    ad_indexing_type = 'global'
  []
  [modular_multiple]
    type = 'Exodiff'
    input = 'gap_heat_transfer_radiation_test.i'
    exodiff = 'gap_heat_transfer_radiation_test_out.e'
    abs_zero = 1e-06
    design = 'ModularGapConductanceConstraint.md'
    issues = '#19229'
    requirement = 'We shall be able to produce the expected result for a combined gap conductance '
                  'and radiative heat transfer test case using the mortar method using the modular '
                  'gap flux system'
  []

  [displaced]
    type = Exodiff
    input = 'gap_heat_transfer_mortar_displaced.i'
    exodiff = 'gap_heat_transfer_mortar_displaced_out.e'
    custom_cmp = 'one-variable-temp.cmp'
    partial = True
    map = False
    requirement = 'We shall be able to run the mortar method on a displaced mesh, supplying the '
                  'displacements with **constant** auxiliary variables'
  []
  [modular_displaced]
    type = Exodiff
    input = 'modular_gap_heat_transfer_mortar_displaced.i'
    exodiff = 'modular_gap_heat_transfer_mortar_displaced_out.e'
    custom_cmp = 'one-variable-temp.cmp'
    partial = True
    map = False
    design = 'ModularGapConductanceConstraint.md'
    issues = '#19229'
    requirement = 'We shall be able to produce the expected result for a gap conductance test case '
                  'using the mortar method using the modular gap flux system with a displaced mesh.'
    ad_indexing_type = 'global'
  []
  [displaced_rz]
    type = Exodiff
    input = 'gap_heat_transfer_mortar_displaced.i'
    exodiff = 'gap_heat_transfer_mortar_displaced_rz_out.e'
    cli_args = 'Outputs/file_base=gap_heat_transfer_mortar_displaced_rz_out Problem/coord_type=RZ'
    requirement = 'The system shall accurately calculate axisymmetric coordinates on mortar finite '
                  'element segments'
  []
  [bc_gap_heat_transfer_displaced_radiation]
    design = 'ModularGapConductanceConstraint.md'
    issues = '#19286'
    type = CSVDiff
    input = 'bc_gap_heat_transfer_displaced_radiation.i'
    csvdiff = 'bc_gap_heat_transfer_displaced_radiation_out_NodalTemperature_0001.csv'
    requirement = 'We shall be able to generate node-to-segment numerical results for radiation '
                  'through plates and use it as a reference for mortar-based constraints.'
    ad_indexing_type = 'global'
  []
  [modular_gap_heat_transfer_mortar_displaced_radiation]
    design = 'ModularGapConductanceConstraint.md'
    issues = '#19286'
    type = CSVDiff
    input = 'modular_gap_heat_transfer_mortar_displaced_radiation.i'
    csvdiff = 'modular_gap_heat_transfer_mortar_displaced_radiation_out_NodalTemperature_0001.csv'
    rel_err = 1.0e-3
    requirement = 'We shall be able to generate mortar numerical results for radiation through '
                  'plates that are close to those generated by the node-to-segment formulation.'
    ad_indexing_type = 'global'
  []
  [bc_gap_heat_transfer_displaced_conduction]
    design = 'ModularGapConductanceConstraint.md'
    issues = '#19286'
    type = CSVDiff
    input = 'bc_gap_heat_transfer_displaced_conduction.i'
    csvdiff = 'bc_gap_heat_transfer_displaced_conduction_out_NodalTemperature_0001.csv'
    requirement = 'We shall be able to generate node-to-segment numerical results for conduction '
                  'through plates and use it as a reference for mortar-based constraints.'
    ad_indexing_type = 'global'
  []
  [modular_gap_heat_transfer_mortar_displaced_conduction]
    design = 'ModularGapConductanceConstraint.md'
    issues = '#19286'
    type = CSVDiff
    input = 'modular_gap_heat_transfer_mortar_displaced_conduction.i'
    csvdiff = 'modular_gap_heat_transfer_mortar_displaced_conduction_out_NodalTemperature_0001.csv'
    rel_err = 1.0e-3
    requirement = 'We shall be able to generate mortar numerical results for conduction through '
                  'plates that are close to those generated by the node-to-segment formulation.'
    ad_indexing_type = 'global'
  []
  [large_gap_heat_transfer_test_cylinder]
    design = 'ModularGapConductanceConstraint.md'
    issues = '#19286'
    type = CSVDiff
    input = 'large_gap_heat_transfer_test_cylinder.i'
    csvdiff = 'large_gap_heat_transfer_test_cylinder_out_NodalTemperature_0001.csv'
    requirement = 'We shall be able to generate node-to-segment numerical results for conduction and '
                  'radiation through cylinders and use it as a reference for mortar-based '
                  'constraints.'
    ad_indexing_type = 'global'
  []
  [large_gap_heat_transfer_test_cylinder_mortar]
    design = 'ModularGapConductanceConstraint.md'
    issues = '#19286'
    type = CSVDiff
    input = 'large_gap_heat_transfer_test_cylinder_mortar.i'
    csvdiff = 'large_gap_heat_transfer_test_cylinder_mortar_out_NodalTemperature_0001.csv'
    rel_err = 1.0e-3
    requirement = 'We shall be able to generate mortar numerical results for conduction and '
                  'radiationthrough cylinders that are close to those generated by the '
                  'node-to-segment formulation.'
    ad_indexing_type = 'global'
  []
  [large_gap_heat_transfer_test_rz_cylinder]
    design = 'ModularGapConductanceConstraint.md'
    issues = '#19286'
    type = CSVDiff
    input = 'large_gap_heat_transfer_test_rz_cylinder.i'
    csvdiff = 'large_gap_heat_transfer_test_rz_cylinder_out_NodalTemperature_0001.csv'
    requirement = 'We shall be able to generate node-to-segment numerical results for conduction and '
                  'radiation through cylinders with axisymmetry and use it as a reference for '
                  'mortar-based constraints.'
    ad_indexing_type = 'global'
  []
  [large_gap_heat_transfer_test_rz_cylinder_mortar]
    design = 'ModularGapConductanceConstraint.md'
    issues = '#19286'
    type = CSVDiff
    input = 'large_gap_heat_transfer_test_rz_cylinder_mortar.i'
    csvdiff = 'large_gap_heat_transfer_test_rz_cylinder_mortar_out_NodalTemperature_0001.csv'
    rel_err = 1.0e-3
    requirement = 'We shall be able to generate mortar numerical results for conduction and '
                  'radiationthrough cylinders with axisymmetry that are close to those generated by '
                  'the node-to-segment formulation.'
    ad_indexing_type = 'global'
  []
  [large_gap_heat_transfer_test_sphere]
    design = 'ModularGapConductanceConstraint.md'
    issues = '#19286'
    type = CSVDiff
    input = 'large_gap_heat_transfer_test_sphere.i'
    csvdiff = 'large_gap_heat_transfer_test_sphere_out_NodalTemperature_0001.csv'
    requirement = 'We shall be able to generate node-to-segment numerical results for conduction and '
                  'radiation through concentric spheres with axisymmetry and use it as a reference '
                  'for mortar-based constraints.'
    ad_indexing_type = 'global'
  []
  [large_gap_heat_transfer_test_sphere_mortar]
    design = 'ModularGapConductanceConstraint.md'
    issues = '#19286'
    type = CSVDiff
    input = 'large_gap_heat_transfer_test_sphere_mortar.i'
    csvdiff = 'large_gap_heat_transfer_test_sphere_mortar_out_NodalTemperature_0001.csv'
    rel_err = 0.06
    requirement = 'We shall be able to generate mortar numerical results for conduction and '
                  'radiation through concentric spheres with axisymmetry that are close to those '
                  'generated by the node-to-segment formulation.'
    ad_indexing_type = 'global'
  []
  [modular_gap_heat_transfer_mortar_displaced_radiation_conduction]
    design = 'ModularGapConductanceConstraint.md'
    issues = '#19286'
    type = CSVDiff
    input = 'modular_gap_heat_transfer_mortar_displaced_radiation_conduction.i'
    csvdiff = 'modular_gap_heat_transfer_mortar_displaced_radiation_conduction_out_NodalTemperature_0'
              '001.csv'
    requirement = 'We shall be able to generate mortar numerical results for conduction and '
                  'radiation in two dimensions. This test is used as a reference for computing '
                  'separate gap physics, i.e. for the use of multiple heat flux Lagrange multipliers'
    ad_indexing_type = 'global'
  []
  [modular_gap_heat_transfer_mortar_displaced_radiation_conduction_separate]
    design = 'ModularGapConductanceConstraint.md'
    issues = '#19286'
    type = CSVDiff
    input = 'modular_gap_heat_transfer_mortar_displaced_radiation_conduction_separate.i'
    csvdiff = 'modular_gap_heat_transfer_mortar_displaced_radiation_conduction_separate_out_NodalTemp'
              'erature_0001.csv'
    requirement = 'We shall be able to reproduce heat transfer mortar results when the gap physics '
                  '(i.e. radiation and conduction) are separated in two constraint classes with '
                  'independent Lagrange multipliers'
    ad_indexing_type = 'global'
  []
  [large_gap_heat_transfer_test_sphere_mortar_geometry_error]
    design = 'ModularGapConductanceConstraint.md'
    issues = '#19286'
    type = RunException
    input = 'large_gap_heat_transfer_test_sphere_mortar_error.i'
    expect_err = 'gap_geometry_type = SPHERE'
    requirement = 'We shall be able to generate a meaningful error message if the user does not '
                  'define the sphere origin when a spherical geometry has been chosen.'
    ad_indexing_type = 'global'
  []
  [large_gap_heat_transfer_test_cylinder_mortar_error]
    design = 'ModularGapConductanceConstraint.md'
    issues = '#19286'
    type = RunException
    input = 'large_gap_heat_transfer_test_cylinder_mortar_error.i'
    expect_err = 'gap_geometry_type = CYLINDER'
    requirement = 'We shall be able to generate a meaningful error message if the user does not '
                  'define the cylinder points when a cylindrical geometry has been chosen.'
    ad_indexing_type = 'global'
  []
  [modular_gap_heat_transfer_mortar_displaced_conduction_function]
    design = 'ModularGapConductanceConstraint.md'
    issues = '#19286'
    type = CSVDiff
    input = 'modular_gap_heat_transfer_mortar_displaced_conduction_function.i'
    csvdiff = 'modular_gap_heat_transfer_mortar_displaced_conduction_function_out_NodalTemperature_00'
              '01.csv'
    rel_err = 1.0e-3
    requirement = 'We shall be able to generate mortar numerical results for conduction through '
                  'plates that are close to those generated by the node-to-segment formulation and '
                  'using the function feature to enrich the evolution of the gap conductance.'
    ad_indexing_type = 'global'
  []
[]
